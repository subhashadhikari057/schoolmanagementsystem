# =============================================================================
# School Management System - Environment Configuration
# =============================================================================
# Copy this file to .env and fill in your actual values
# DO NOT commit .env to version control - it contains sensitive information
# =============================================================================

# =============================================================================
# üóÑÔ∏è  DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL database connection string
# Format: postgresql://username:password@host:port/database_name
# Example: postgresql://postgres:password@localhost:5432/school_management_db
DATABASE_URL="postgresql://postgres:password@localhost:5432/school_management_db"

# =============================================================================
# üîê JWT AUTHENTICATION CONFIGURATION
# =============================================================================
# JWT Private Key (Base64 encoded RSA private key)
# Generate with: openssl genpkey -algorithm RSA -out private.pem -pkcs8 -aes256
# Then base64 encode: cat private.pem | base64 -w 0
JWT_PRIVATE_KEY_BASE64="LS0tLS1CRUdJTi0tLS0t..."

# JWT Public Key (Base64 encoded RSA public key)
# Generate with: openssl rsa -pubout -in private.pem -out public.pem
# Then base64 encode: cat public.pem | base64 -w 0
JWT_PUBLIC_KEY_BASE64="LS0tLS1CRUdJTi0tLS0t..."

# JWT Token Expiration Times
# Access token expiration (short-lived for security)
JWT_ACCESS_EXPIRES_IN="15m"

# Refresh token expiration (longer-lived for user experience)
JWT_REFRESH_EXPIRES_IN="7d"

# =============================================================================
# üç™ COOKIE CONFIGURATION
# =============================================================================
# Cookie domain for authentication cookies
# Leave empty for localhost, set to your domain in production
# Example: ".yourdomain.com" for subdomain support
COOKIE_DOMAIN=""

# Cookie SameSite policy (lax, strict, or none)
# - lax: Good for most cases, allows some cross-site requests
# - strict: Most secure, blocks all cross-site requests
# - none: Required for cross-origin requests (needs HTTPS)
COOKIE_SAME_SITE="lax"

# Access token cookie expiration (in milliseconds)
# Should match JWT_ACCESS_EXPIRES_IN (15 minutes = 900000ms)
ACCESS_TOKEN_EXPIRES_IN="900000"

# Refresh token cookie expiration (in milliseconds)
# Should match JWT_REFRESH_EXPIRES_IN (7 days = 604800000ms)
REFRESH_TOKEN_EXPIRES_IN="604800000"

# =============================================================================
# üåê SERVER CONFIGURATION
# =============================================================================
# Port for the backend server to listen on
# Default: 8080 for development, 3000 for production
PORT="8080"

# Node.js environment (development, production, test)
# Affects logging, error handling, and security settings
NODE_ENV="development"

# =============================================================================
# üìß EMAIL CONFIGURATION (Future Implementation)
# =============================================================================
# SMTP configuration for sending emails
# SMTP_HOST="smtp.gmail.com"
# SMTP_PORT="587"
# SMTP_USER="your-email@gmail.com"
# SMTP_PASS="your-app-password"
# SMTP_FROM="School Management System <noreply@yourschool.com>"

# =============================================================================
# üìÅ FILE UPLOAD CONFIGURATION (Future Implementation)
# =============================================================================
# Maximum file size for uploads (in bytes)
# MAX_FILE_SIZE="10485760"  # 10MB

# Allowed file types (comma-separated)
# ALLOWED_FILE_TYPES="jpg,jpeg,png,pdf,doc,docx"

# Upload directory path
# UPLOAD_PATH="./uploads"

# =============================================================================
# üîç LOGGING CONFIGURATION (Future Implementation)
# =============================================================================
# Log level (error, warn, info, debug)
# LOG_LEVEL="info"

# Log file path
# LOG_FILE="./logs/app.log"

# =============================================================================
# üîí SECURITY CONFIGURATION (Future Implementation)
# =============================================================================
# Rate limiting configuration
# RATE_LIMIT_WINDOW_MS="900000"  # 15 minutes
# RATE_LIMIT_MAX_REQUESTS="100"

# CORS origins (comma-separated)
# CORS_ORIGINS="http://localhost:3000,https://yourschool.com"

# =============================================================================
# üìä MONITORING CONFIGURATION (Future Implementation)
# =============================================================================
# Application monitoring
# SENTRY_DSN="https://your-sentry-dsn@sentry.io/project-id"

# Performance monitoring
# NEW_RELIC_LICENSE_KEY="your-new-relic-key"

# =============================================================================
# üß™ TESTING CONFIGURATION
# =============================================================================
# Test database URL (used for running tests)
# TEST_DATABASE_URL="postgresql://postgres:password@localhost:5432/school_management_test_db"

# =============================================================================
# üí° DEVELOPMENT NOTES
# =============================================================================
# 1. Generate JWT keys with:
#    openssl genpkey -algorithm RSA -out private.pem -pkcs8 -aes256
#    openssl rsa -pubout -in private.pem -out public.pem
#    cat private.pem | base64 -w 0
#    cat public.pem | base64 -w 0
#
# 2. For production, use strong passwords and secure key management
#
# 3. Set NODE_ENV=production in production environment
#
# 4. Use environment-specific values for different deployment stages
#
# 5. Never commit actual .env file to version control
#
# ============================================================================= 